{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\index.svelte",
    "..\\..\\Header.svelte",
    "..\\..\\Card.svelte",
    "..\\..\\Dataset.svelte",
    "..\\..\\Label.svelte",
    "..\\..\\Exporter.svelte",
    "..\\..\\Button.svelte"
  ],
  "sourcesContent": [
    "<svelte:head>\n  <title>Chart Generator</title>\n  <meta name=\"description\" content=\"A chart generator\" />\n  <meta name=\"keywords\" content=\"graph, generator, opensource, svelte\" />\n  <meta name=\"author\" content=\"Massimo Moffa\" />\n  <link href=\"https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap\" rel=\"stylesheet\">\n  <meta name=\"theme-color\" content=\"#c5cae9\"/>\n</svelte:head>\n\n<script>\n\timport {onMount} from 'svelte';\n  import { title_stored, label_stored, data_stored } from './stored_data.js';\n\timport Header from './Components/Header.svelte';\n\timport Card from './Components/Card.svelte';\n\timport Graph from './Components/Graph.svelte';\n\timport Grid from 'svelte-grid';\n\timport gridHelp from \"svelte-grid/build/helper/index.mjs\";\n  import Configuration from './Widget/Configuration.svelte';\n  import Dataset from './Widget/Dataset.svelte';\n  import Label from './Widget/Label.svelte';\n  import Exporter from './Widget/Exporter.svelte';\n\n\tlet items_arr = [\n\t\tgridHelp.item({ x: 0, y: 0, w: 3, h: 4, id: \"preview_container\", title: null, description: null, resizable: false, static: true}),\n    gridHelp.item({ x: 3, y: 0, w: 2, h: 4, id: \"configuration_container\", title: \"Configurazione\", description: null, resizable: false, static: true}),\n    gridHelp.item({ x: 0, y: 4, w: 5, h: 2, id: \"labels_container\", title: \"Colonne\", description: null, resizable: false, static: true}),\n    gridHelp.item({ x: 0, y: 6, w: 5, h: 3, id: \"dataset_container\", title: \"Righe\", description: null, resizable: false, static: true}),\n\t];\n  let breakpoints = [\n    [1000, 1, 3],\n  ]\n\n\tonMount(() => {\n\t\t//Prima di tutto il grafico\n\t\tconst graph = new Graph({\n\t\t\ttarget: document.querySelector(\"#preview_container\"),\n\t\t\tprops: {}\n\t\t});\n\n    //Ora tocca al widget per i label\n    const label = new Label({\n\t\t\ttarget: document.querySelector(\"#labels_container\"),\n\t\t\tprops: {},\n\t\t});\n\n    //Poi il widget per la configurazione\n    const configuration = new Configuration({\n\t\t\ttarget: document.querySelector(\"#configuration_container\"),\n\t\t\tprops: {},\n\t\t}).$on(\"exportChart\", (ris) => {\n      let exportChart = new Exporter({\n        target: document.body,\n        props: ris.detail,\n      });\n      exportChart.$set({\n        ctx: exportChart,\n      });\n    });\n\n    //Ed infine il widget per gestire i dataset\n    const dataset = new Dataset({\n      target: document.querySelector(\"#dataset_container\"),\n      props: {},\n    });\n\t});\n</script>\n\n<main>\n\t<Header />\n\t<Grid useTransform {breakpoints} items={items_arr} bind:items_arr cols={5} let:item rowHeight={90} gap={20}>\n  \t<Card title={item.title} description={item.description}>\n  \t\t<div class=\"content_container\" id={item.id}>\n        {#if item.content}\n          {@html item.content}\n        {/if}\n      </div>\n  \t</Card>\n\t</Grid>\n</main>\n\n<style>\n\n  ::-webkit-scrollbar {\n    width: 7px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #fff;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #5c6bc0;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: #4454b1;\n  }\n\n\t:global(body){\n\t\toverflow: hidden !important;\n\t}\n\n\t:global(.svlt-grid-container) {\n    margin: 0 30px;\n  }\n\n\tmain {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\n\t\tbackground-color: #fff;\n\t\toverflow-y: auto;\n    scrollbar-color: #5c6bc0 #fff;\n    scrollbar-width: thin;\n\n    background: url('../media/image/background-page.svg') no-repeat;\n    background-size: cover;\n\t}\n\n  .content_container{\n    height: 90%;\n  }\n\n  :global(.svlt-grid-item){\n    touch-action: auto !important;\n  }\n\n  :global(.svlt-grid-container){\n    width: 100%;\n    max-width: 1100px;\n    margin: 4px auto;\n  }\n\n</style>\n",
    "<style>\n  :global(body) {\n    overflow: scroll;\n  }\n\n .svlt-grid-container {\n  position: relative;\n}\n\n.svlt-grid-item {\n  touch-action:none;\n  position: absolute;\n}\n\n.svlt-grid-shadow {\n  position: absolute;\n}\n\n\n.svlt-grid-resizer {\n  user-select: none;\n  width: 20px;\n  height: 20px; \n  position:absolute; \n  right: 0; \n  bottom: 0; \n  cursor: se-resize; \n}\n\n.svlt-grid-resizer::after {\n  content: \"\";\n  position: absolute;\n  right: 3px;\n  bottom: 3px;\n  width: 5px;\n  height: 5px;\n  border-right: 2px solid rgba(0, 0, 0, 0.4);\n  border-bottom: 2px solid rgba(0, 0, 0, 0.4);\n}\n</style>\n\n<svelte:window on:resize={ debounce(onResize,300) } />\n\n<div class:svlt-grid-transition={!focuesdItem} class=svlt-grid-container bind:this={container} style=\"height: {ch}px\">\n  {#each items as item, i (item.id)}\n\n    <div on:mousedown={item.draggable ? dragOnMouseDown.bind(this, item.id) : null}\n        on:touchstart={item.draggable ? dragOnMouseDown.bind(this, item.id) : null}\n        class=svlt-grid-item style=\"{useTransform ? `transform: translate(${item.drag.dragging ? item.drag.left : (item.x * xPerPx) + gap}px, ${item.drag.dragging ? item.drag.top : (item.y * yPerPx + gap)}px);` : ''};\n        {!useTransform ? `top: ${item.drag.dragging ? item.drag.top : (item.y * yPerPx) + gap}px` : ''};\n        {!useTransform ? `left: ${item.drag.dragging ? item.drag.left : (item.x * xPerPx) + gap}px` : ''};\n        width: {item.resize.resizing ? item.resize.width : ((item.w * xPerPx) - gap * 2) - (item.responsive.valueW*xPerPx)}px;\n        height: {item.resize.resizing ? item.resize.height : (item.h * yPerPx) - gap * 2}px;\n        z-index: {item.drag.dragging || item.resize.resizing ? 3 : 1};\n        opacity: {item.resize.resizing ? 0.5 : 1}\">\n\n          <slot {item} index={i}></slot>\n          {#if item.resizable}\n            <div class=svlt-grid-resizer \n          on:touchstart={resizeOnMouseDown.bind(this,item.id)} \n          on:mousedown={resizeOnMouseDown.bind(this,item.id)}\n          ></div>\n          {/if}\n        </div>\n\n\n  {/each}\n\n  {#if shadow.active}\n    <div class=svlt-grid-shadow style=\"{useTransform ? `transform: translate(${shadow.drag.dragging ? shadow.drag.left : (shadow.x * xPerPx) + gap}px, ${shadow.drag.dragging ? shadow.drag.top : (shadow.y * yPerPx + gap)}px);` : ''};\n        {!useTransform ? `top: ${shadow.drag.dragging ? shadow.drag.top : (shadow.y * yPerPx) + gap}px` : ''};\n        {!useTransform ? `left: ${shadow.drag.dragging ? shadow.drag.left : (shadow.x * xPerPx) + gap}px` : ''};\n    width:{((shadow.w * xPerPx) - gap * 2) - (shadow.responsive.valueW*xPerPx)}px;\n    height:{(shadow.h * yPerPx) - gap * 2}px;\"></div>\n  {/if}\n</div>\n\n<script>\nimport { onMount, beforeUpdate,createEventDispatcher } from \"svelte\";\n\nimport { resizeItems, getItemById, moveItem, findFreeSpaceForItem } from \"./utils/item.js\";\nimport { getContainerHeight } from \"./utils/container.js\";\nimport { debounce, getRowsCount, getColumnFromBreakpoints, getCordinates, getTranslate } from \"./utils/other.js\";\nimport { makeMatrixFromItemsIgnore } from \"./utils/matrix.js\";\n\nexport let useTransform = false;\nexport let items = [];\nexport let cols = 0;\nexport let dragDebounceMs = 350;\nexport let gap = 0;\nexport let rowHeight = 150;\nexport let breakpoints;\nexport let fillEmpty = true;\n\nlet container,\n  focuesdItem,\n  bound,\n  xPerPx,\n  currentItemIndex,\n  getComputedCols,\n  documentWidth,\n  resizeNoDynamicCalc,\n  yPerPx = rowHeight,\n  initCols = cols,\n  shadow = {\n    w: 0,\n    h: 0,\n    x: 0,\n    y: 0,\n    active: false,\n    id: null,\n    responsive: { valueW: 0 },\n    min: {},\n    max: {}\n  },\n  ch = getContainerHeight(items, yPerPx);\n\nconst dispatch = createEventDispatcher();\n\nconst getDocWidth = () => document.documentElement.clientWidth\n\nfunction onResize() {\n\n  let w = document.documentElement.clientWidth\n\n  if(w !== documentWidth) {\n    documentWidth = w;\n    \n    bound = container.getBoundingClientRect();\n\n    let getCols = getColumnFromBreakpoints(breakpoints,w,cols,initCols)\n    \n    getComputedCols = getCols\n\n    xPerPx = bound.width / getCols\n\n    dispatch('resize', {\n      cols:getCols,\n      xPerPx,\n      yPerPx // same as rowHeight\n    });\n\n    if(breakpoints) {\n    \titems = resizeItems(items, getCols);\n    }\n\n  } \n\n}\n\n\nonMount(() => {\n  bound = container.getBoundingClientRect();\n\n  let getCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n  \n  getComputedCols = getCols\n\n  documentWidth = document.documentElement.clientWidth\n\n  if(breakpoints) {\n    items = resizeItems(items, getCols)\n  }\n\n  xPerPx = bound.width / getCols\n\n  dispatch('mount', {\n    cols: getCols,\n    xPerPx,\n    yPerPx // same as rowHeight\n  })\n\n});\n\n// resize\n\nlet resizeStartX, resizeStartY, resizeStartWidth, resizeStartHeight;\n\nfunction resizeOnMouseDown(id, e) {\n  e.stopPropagation();\n\n  let {pageX,pageY} = getCordinates(e)\n\n  const { item, index } = getItemById(id, items);\n\n  currentItemIndex = index;\n\n  focuesdItem = item;\n\n  cacheItem = {...item}\n\n  resizeNoDynamicCalc = item.h + item.y === getRowsCount(items);\n\n  shadow = {...shadow,...focuesdItem,...{active:true}}\n\n  resizeStartX = pageX - bound.x;\n  resizeStartY = pageY - bound.y;\n\n  resizeStartWidth = (item.w * xPerPx) - (gap * 2) - (focuesdItem.responsive.valueW * xPerPx);\n\n  resizeStartHeight = (item.h * yPerPx) - (gap * 2);\n\n  getComputedCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n\n  window.addEventListener(\"mousemove\", resizeOnMouseMove, false);\n  window.addEventListener(\"touchmove\", resizeOnMouseMove, false);\n\n  window.addEventListener(\"mouseup\", resizeOnMouseUp, false);\n  window.addEventListener(\"touchend\", resizeOnMouseUp, false);\n}\n\nfunction resizeOnMouseMove(e) {\n\n  let {pageX,pageY}=getCordinates(e);\n\n  pageX = pageX - bound.x;\n  pageY = pageY - bound.y;\n\n  const height = resizeStartHeight + pageY - resizeStartY;\n  const width = resizeStartWidth + (pageX - resizeStartX)\n\n  const {responsive:{valueW} } = focuesdItem;\n\n  let wRes = Math.round(width / xPerPx) + valueW\n\n  const {h:minHeight=1,w:minWidth=1} = focuesdItem.min\n  const {h:maxHeight,w:maxWidth = ((getComputedCols - focuesdItem.x)+valueW)} = focuesdItem.max\n\n  wRes = Math.min(Math.max(wRes,minWidth),maxWidth)/* min max*/\n\n  let hRes = Math.round(height/yPerPx)\n  if(maxHeight) {\n    hRes = Math.min(hRes,maxHeight)\n  }\n  hRes = Math.max(hRes,minHeight)\n\n  shadow = {...shadow, ...{w:wRes, h:hRes}} \n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    resize: {\n      resizing:true,\n      width,\n      height\n    },\n    w:wRes,\n    h:hRes\n  }\n\n  if (!resizeNoDynamicCalc) {\n    debounceRecalculateGridPosition();\n  }\n}\n\nfunction resizeOnMouseUp(e) {\n  e.stopPropagation();\n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    resize:{\n      resizing:false,\n      width:0,\n      height:0\n    }\n  }\n\n  window.removeEventListener(\"mousemove\", resizeOnMouseMove, false);\n  window.removeEventListener(\"touchmove\", resizeOnMouseMove, false);\n\n  window.removeEventListener(\"mouseup\", resizeOnMouseUp, false);\n  window.removeEventListener(\"touchend\", resizeOnMouseUp, false);\n\n  shadow = {...shadow, ... {w:0,h:0,x:0,y:0,active:false,id:null,responsive:{valueW:0}}, min:{},max:{} } \n\n  recalculateGridPosition(\"up\");\n\n  focuesdItem = undefined;\n  resizeNoDynamicCalc = false;\n}\n\n// drag\nlet dragX = 0,\n  dragY = 0;\n\nconst debounceRecalculateGridPosition = debounce(recalculateGridPosition, dragDebounceMs);\n\nlet cacheItem = {};\n\nfunction dragOnMouseDown(id, e) {\n  e.stopPropagation()\n  let {pageX,pageY} = getCordinates(e)\n\n  const { item, index } = getItemById(id, items);\n  \n  currentItemIndex = index;\n\n\n  focuesdItem = item;\n  cacheItem = {...item}\n  \n  shadow = { ...shadow, ...item, active: true }; \n\n  \n\n  let { currentTarget } = e;\n\n  let offsetLeft, offsetTop;\n\n  if(useTransform) {\n    const { x, y } = getTranslate(currentTarget.style.transform)\n    offsetLeft = x\n    offsetTop = y\n  } else {\n    offsetLeft = currentTarget.offsetLeft\n    offsetTop = currentTarget.offsetTop\n  }\n\n  pageX = pageX - bound.x;\n  pageY = pageY - bound.y;\n\n  dragX = pageX - offsetLeft;\n\n  dragY = pageY - offsetTop;\n\n  getComputedCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n\n\n  if (item) {\n    window.addEventListener(\"mousemove\", dragOnMove, false);\n    window.addEventListener(\"touchmove\", dragOnMove, false);\n\n    window.addEventListener(\"mouseup\", dragOnMouseUp, false);\n    window.addEventListener(\"touchend\", dragOnMouseUp, false);\n  } else {\n    console.warn(\"Can not get item\");\n  }\n}\n\n\nfunction dragOnMove(e) {\n  e.stopPropagation()\n\n  let {pageX,pageY} = getCordinates(e)\n\n  const y = pageY - bound.y;\n  const x = pageX - bound.x;\n\n  let xRes = Math.round((x - dragX) / xPerPx);\n  let yRes = Math.round((y - dragY) / yPerPx);\n\n  xRes = Math.max(Math.min(xRes,getComputedCols-(focuesdItem.w- focuesdItem.responsive.valueW)),0)\n\n  yRes = Math.max(yRes, 0);\n\n  let assignItem = items[currentItemIndex];\n\n  items[currentItemIndex] = {\n    ...assignItem,\n    drag:{\n      dragging:true,\n      top:y - dragY,\n      left:x - dragX\n    },\n    x:xRes,\n    y:yRes\n  }\n\n  shadow = {...shadow, ...{x:xRes,y:yRes}}\n\n  debounceRecalculateGridPosition();\n}\n\nfunction dragOnMouseUp(e) {\n  window.removeEventListener(\"mousemove\", dragOnMove, false);\n  window.removeEventListener(\"touchmove\", dragOnMove, false);\n\n  window.removeEventListener(\"mouseup\", dragOnMouseUp, false);\n  window.removeEventListener(\"touchend\", dragOnMouseUp, false);\n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    drag: {\n      dragging: false,\n      top: 0,\n      left: 0\n    },\n  }\n\n  dragX = 0;\n  dragY = 0;\n\n  shadow = {...shadow, ...{w:0,h:0,x:0,y:0,active:false,id:null}} \n  \n  recalculateGridPosition(\"up\");\n\n  focuesdItem = undefined;\n}\n\n\n// Will work on this, need to make code cleaner\nfunction recalculateGridPosition(action) {\n  const dragItem = items[currentItemIndex];\n\n  let getCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n  let result = moveItem(dragItem, items, getCols, cacheItem);\n\n  if(fillEmpty) {\n\n    result.forEach(value => {\n      if (value.id !== dragItem.id) {\n        result = result.map($val =>\n          $val.id === value.id\n            ? {\n                ...$val,\n                ...findFreeSpaceForItem(\n                  makeMatrixFromItemsIgnore(result, [value.id], getRowsCount(result), getCols),\n                  value,\n                  result\n                )\n              }\n            : $val\n        );\n      }\n    });\n  }\n\n  items = result\n\n  dispatch('adjust', {\n    focuesdItem: dragItem\n  });\n\n}\n\nbeforeUpdate(() => {\n  if (!focuesdItem) {\n    ch = getContainerHeight(items, yPerPx);\n    if(cols !== initCols) {\n      if(bound) {\n        xPerPx = bound.width/cols\n        initCols = cols\n      }\n    }\n  }\n});\n\n\n</script>\n",
    "<main>\r\n  <div class=\"content\">\r\n    <div class=\"title\">Chart Generator</div>\r\n    <div class=\"description\">Made with ❤️ by <a href=\"https://dev.to/maxmoffa\">@maxmoffa</a> on <a href=\"https://github.com/MaxMoffa/ChartGenerator\">Github</a></div>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  main{\r\n    width: 100%;\r\n    max-width: 600px;\r\n    height: auto;\r\n    display: block;\r\n    margin: 65px auto;\r\n\r\n    font-family: 'Playfair Display', serif;\r\n    color: #000;\r\n    line-height: 50px;\r\n\r\n  }\r\n\r\n  .content{\r\n    margin: 0 16px;\r\n  }\r\n\r\n  .title{\r\n    font-size: 65px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .description{\r\n    font-size: 15px;\r\n  }\r\n\r\n  a{\r\n    font-weight: 700;\r\n    color: #000;\r\n  }\r\n\r\n</style>\r\n",
    "<script>\r\n  export let title = \"\";\r\n  export let description = \"\";\r\n  export let background = \"#FFFFFF\";\r\n  export let color = \"#000000\";\r\n</script>\r\n\r\n<main style=\"background-color: {background}; color: {color}\">\r\n  <div class=\"content\">\r\n    <div class=\"info\">\r\n      {#if title}\r\n        <p class=\"title\">{title}</p>\r\n      {/if}\r\n      {#if description}\r\n        <p class=\"description\">{description}</p>\r\n      {/if}\r\n    </div>\r\n    <slot>\r\n      <p align=\"center\">Ops! Sembra non esserci niente</p>\r\n    </slot>\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  main{\r\n    width: 100%;\r\n    min-height: 100%;\r\n    height: fit-content;\r\n\r\n    border: 5px solid #c5cae9;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .content{\r\n    position: relative;\r\n    display: block;\r\n    margin: 25px;\r\n    height: 100%;\r\n  }\r\n\r\n  .info{\r\n    line-height: 6px;\r\n  }\r\n\r\n  .info .title{\r\n    font-weight: 800;\r\n    color: #000;\r\n    font-size: 20px;\r\n    font-family: 'Playfair Display', serif;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .info .description{\r\n    line-height: 18px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { data_stored } from '../stored_data.js';\r\n\r\n  let id = 0;\r\n  export let data = [];\r\n\r\n  data_stored.subscribe(value => {\r\n    data = value;\r\n  });\r\n\r\n  function handleChange(info) {\r\n    console.log(info);\r\n    if(info.target.placeholder === \"Trattegiata\"){\r\n      if(info.target.checked) data[id].borderDash = [10];\r\n      else data[id].borderDash = [];\r\n    }\r\n    data_stored.set(data);\r\n  }\r\n\r\n</script>\r\n\r\n<main>\r\n  {#if data.length > 0}\r\n    <label for=\"row_selector\">Nome</label>\r\n    <select id=\"row_selector\" bind:value={id}>\r\n      {#each data as element, i}\r\n        <option value={i}>Riga #{i}</option>\r\n      {/each}\r\n    </select>\r\n    <div>\r\n      <label for=\"{id}_label\">Nome</label>\r\n      <input type=\"text\" id=\"{id}_label\" placeholder=\"Nome\" on:change={handleChange} bind:value={data[id].label}>\r\n    </div>\r\n    <label for=\"{id}_type\">Tipo di grafico</label>\r\n    <select id=\"{id}_type\" on:change={handleChange} bind:value={data[id].type}>\r\n      <option value=\"line\">Linea</option>\r\n      <option value=\"bar\">Barre</option>\r\n    </select>\r\n    <div>\r\n      <label for=\"{id}_background\">Colore dello sfondo</label>\r\n      <input type=\"color\" id=\"{id}_background\" placeholder=\"Sfondo\" on:change={handleChange} bind:value={data[id].backgroundColor}>\r\n    </div>\r\n    <div>\r\n      <label for=\"{id}_border\">Colore dello bordo</label>\r\n      <input type=\"color\" id=\"{id}_border\" placeholder=\"Bordo\" on:change={handleChange} bind:value={data[id].borderColor}>\r\n    </div>\r\n    <div>\r\n      <label for=\"{id}_dash\">Linea trattegiata</label>\r\n      <input type=\"checkbox\" id=\"{id}_dash\" placeholder=\"Trattegiata\" on:change={handleChange} checked={!(data[id].borderDash.length === 0)}>\r\n    </div>\r\n    <label for=\"{id}_data_container\">Valori</label>\r\n    <div id=\"{id}_data_container\" class=\"data_container\">\r\n      {#each data[id].data as element, i}\r\n        <input type=\"text\" id=\"{id}:{i}\" placeholder={\"Dato #\" + i} on:change={handleChange} bind:value={element}>\r\n      {/each}\r\n    </div>\r\n  {:else}\r\n    Ancora nulla... 🥺\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  .data_container{\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n    white-space: nowrap;\r\n\r\n    scrollbar-color: #5c6bc0 #fff;\r\n    scrollbar-width: thin;\r\n  }\r\n\r\n  .data_container::-webkit-scrollbar {\r\n    width: 7px;\r\n  }\r\n\r\n  .data_container::-webkit-scrollbar-track {\r\n    background: #fff;\r\n  }\r\n\r\n  .data_container::-webkit-scrollbar-thumb {\r\n    background: #5c6bc0;\r\n  }\r\n\r\n  .data_container::-webkit-scrollbar-thumb:hover {\r\n    background: #4454b1;\r\n  }\r\n\r\n  .data_container *{\r\n    display: inline-block;\r\n    margin-left: 2px;\r\n  }\r\n\r\n  main *{\r\n    margin: 8px 0;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { title_stored, label_stored, data_stored } from '../stored_data.js';\r\n\r\n  export let labels = []\r\n\r\n  label_stored.subscribe(value => {\r\n\t\tlabels = value;\r\n\t});\r\n\r\n  function handleChange(data) {\r\n    labels[parseInt(data.target.id)] = data.target.value;\r\n    label_stored.set(labels);\r\n  }\r\n</script>\r\n\r\n<main>\r\n  {#if labels.length > 0}\r\n    <div class=\"labels_container\">\r\n      {#each labels as label, i}\r\n        <input type=\"text\" id=\"{i}\" name=\"title\" placeholder={\"Colonna #\" + i} on:change={handleChange} bind:value={labels[i]}>\r\n      {/each}\r\n    </div>\r\n  {:else}\r\n    Ancora nulla... 🥺\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  main{\r\n    overflow-y: hidden;\r\n    overflow-x: auto;\r\n  }\r\n\r\n  main *{\r\n    margin-right: 2px;\r\n  }\r\n\r\n  .labels_container{\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n    white-space: nowrap;\r\n\r\n    scrollbar-color: #5c6bc0 #fff;\r\n    scrollbar-width: thin;\r\n  }\r\n\r\n  .labels_container *{\r\n    display: inline-block;\r\n  }\r\n\r\n  .labels_container::-webkit-scrollbar {\r\n    width: 7px;\r\n  }\r\n\r\n  .labels_container::-webkit-scrollbar-track {\r\n    background: #fff;\r\n  }\r\n\r\n  .labels_container::-webkit-scrollbar-thumb {\r\n    background: #5c6bc0;\r\n  }\r\n\r\n  .labels_container::-webkit-scrollbar-thumb:hover {\r\n    background: #4454b1;\r\n  }\r\n</style>\r\n",
    "<script>\r\nimport {onMount} from 'svelte';\r\nimport Button from \"../Components/Button.svelte\";\r\n\r\nexport let title = \"\";\r\nexport let label = null;\r\nexport let data = null;\r\nexport let ctx = null;\r\nlet width = 1280;\r\nlet height = 720;\r\nlet extension = \"jpg\";\r\nlet chart = null\r\n\r\nonMount(() => {\r\n  chart = new Chart(document.querySelector('#canvas_generator').getContext('2d'), {\r\n    type: 'bar',\r\n    data: {\r\n      labels: label,\r\n      datasets: data\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      devicePixelRatio: 1,\r\n      title:{\r\n        fontStyle: \"normal\",\r\n        fontFamily: \"Arial\",\r\n        text: title,\r\n        display: (title !== \"\"),\r\n      },\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }]\r\n      },\r\n    }\r\n  });\r\n});\r\n\r\nfunction download() {\r\n  if (chart !== null) {\r\n    let image = document.querySelector(\"#canvas_generator\").toDataURL(\"image/\" + extension);\r\n    let anchor = document.createElement('a');\r\n    anchor.setAttribute('download', (title ? title : \"chart_\" + new Date().getTime()) + '.' + extension);\r\n    anchor.setAttribute('href', image);\r\n    anchor.click();\r\n  }\r\n}\r\n\r\nfunction close() {\r\n  ctx.$destroy();\r\n}\r\n</script>\r\n\r\n<main>\r\n<div class=\"body\">\r\n<div class=\"title\">Esporta il grafico</div>\r\n<div>\r\n<label for=\"width\">Larghezza (in pixel)</label>\r\n<input id=\"width\" type=\"number\" placeholder=\"Larghezza\" bind:value={width}>\r\n</div>\r\n<div>\r\n<label for=\"height\">Altezza (in pixel)</label>\r\n<input id=\"height\" type=\"number\" placeholder=\"Altezza\" bind:value={height}>\r\n</div>\r\n<div>\r\n<label for=\"extension\">Estensione</label>\r\n<select id=\"extension\" bind:value={extension}>\r\n<option value=\"jpg\">.jpg</option>\r\n<option value=\"png\">.png</option>\r\n<!-- <option value=\"svg\">.svg</option> -->\r\n</select>\r\n</div>\r\n<Button text=\"Download\" on:click={download}/>\r\n<Button text=\"Chiudi\" on:click={close} backgroundColor=\"#512da8\"/>\r\n</div>\r\n</main>\r\n\r\n<div class=\"chartGenerator\" style=\"position: relative; height:{height}px !important; width:{width}px !important\">\r\n<canvas style=\"width: {width}px !important; height: {height}px !important;\" id=\"canvas_generator\"></canvas>\r\n</div>\r\n\r\n<style>\r\nmain{\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  overflow: hidden;\r\n  z-index: 10;\r\n  background-color: rgba(255, 255, 255);\r\n}\r\n\r\n.body{\r\n  width: 100%;\r\n  max-width: 400px;\r\n  height: auto;\r\n  margin: 0 auto;\r\n}\r\n\r\n.body div{\r\n  margin: 18px 0;\r\n  margin-left: 20px;\r\n}\r\n\r\n.title{\r\n  font-family: 'Playfair Display', serif;\r\n  color: #000;\r\n  font-size: 55px;\r\n  font-weight: 700;\r\n}\r\n\r\n.chartGenerator{\r\n  width: fit-content;\r\n  height: fit-content;\r\n  z-index: 3;\r\n  position: absolute;\r\n  left: -10000px;\r\n}\r\n\r\n</style>\r\n",
    "<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let text = \"Button\";\r\n  export let backgroundColor = \"#303f9f\";\r\n  export let disabled = false;\r\n\r\n  function click() {\r\n    if(!disabled) dispatch(\"click\", {});\r\n  }\r\n</script>\r\n\r\n<div class={disabled ? \"disabled\" : \"\"} style=\"background-color: {backgroundColor};\" on:click={click}>{text}</div>\r\n\r\n<style>\r\n  div:hover{\r\n    background-color: #1a237e !important;\r\n    transition: 0.3s background;\r\n  }\r\n  div{\r\n    margin: 6px 0;\r\n    cursor: pointer;\r\n    border-radius: 6px;\r\n    color: #fff;\r\n    padding: 10px 18px;\r\n    font-family: 'Playfair Display', serif;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    user-select: none;\r\n    transition: 0.3s background;\r\n  }\r\n  .disabled{\r\n    background-color: #455a64 !important;\r\n    cursor: not-allowed;\r\n  }\r\n  .disabled:hover{\r\n    background-color: #455a64 !important;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}